generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  MANAGER
  ADMIN
}

enum ProjectPriority {
  LOW
  MEDIUM
  HIGH
}

enum ProjectRole {
  OWNER
  MEMBER
  VIEWER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName  String
  lastName   String?
  phone     String?
  address   String?
  avatar    Json?
  onboarding       Json?
  company          Json?
  invitesDraft     Json?
  role      Role     @default(USER)
  phoneVerified    Boolean  @default(false)
  phoneVerifiedAt  DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownedProjects      Project[]       @relation("UserProjectsOwned")
  projectMemberships ProjectMember[] @relation("UserProjectMemberships")
}

model Counter {
  id    String @id
  value Int    @default(0)
}

model Project {
  id          String           @id @default(uuid())
  code        String           @unique
  name        String
  avatar      Json             @default("{}")
  description String?
  priority    ProjectPriority? @default(MEDIUM)
  startDate   DateTime?
  deadline    DateTime?
  ownerId     String
  members     ProjectMember[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  owner       User             @relation("UserProjectsOwned", fields: [ownerId], references: [id])
}

model ProjectMember {
  projectId String
  userId    String
  role      ProjectRole @default(MEMBER)
  createdAt DateTime    @default(now())
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  user      User    @relation("UserProjectMemberships", fields: [userId], references: [id], onDelete: Cascade)

  @@id([projectId, userId])
  @@index([userId])
}