services:
  s3-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER:-minio} ${MINIO_ROOT_PASSWORD:-miniosecret} &&
      mc mb --ignore-existing local/${S3_BUCKET:-crm-files} &&
      mc anonymous set private local/${S3_BUCKET:-crm-files} &&
      echo 'S3 bucket ready'
      "
    environment:
      S3_BUCKET: ${S3_BUCKET:-crm-files}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-miniosecret}
    restart: "no"

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./.env
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - /bin/sh
      - -c
      - |
        if [ -d prisma/migrations ]; then
          count=$$(ls -A prisma/migrations | wc -l);
          if [ $$count -gt 0 ]; then
            echo "Running Prisma migrations ($$count found)";
            npx prisma migrate deploy --schema=prisma/schema.prisma;
          else
            echo "⚠️  No migrations found, skipping deploy";
          fi;
        else
          echo "⚠️ No prisma/migrations folder, skipping deploy";
        fi
    restart: "no"

  api:
    build:
      context: .
    env_file: ./.env
    ports:
      - "3010:3010"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
      s3-init:
        condition: service_completed_successfully
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  api-dev:
    profiles: ["dev"]
    build:
      context: .
      target: dev
    env_file: ./.env
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "1"
      WATCHPACK_POLLING: "1"
      TS_NODE_TRANSPILE_ONLY: "1"
      # NODE_OPTIONS: --inspect=0.0.0.0:9229
    command: sh -lc "npm ci && npx prisma generate && npm run start:dev"
    volumes:
      - .:/app:delegated
      - /app/node_modules
      - ./prisma:/app/prisma
    ports:
      - "3010:3010"
      # - "9229:9229"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
      s3-init:
        condition: service_completed_successfully

  postgres:
    image: postgres:16-bookworm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: woorkroom
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d woorkroom"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - woorkroom_be_pg:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-bookworm
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9101"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    ports:
      - "9100:9000"
      - "9101:9101"
    volumes:
      - woorkroom_be_minio:/data
    restart: unless-stopped

volumes:
  woorkroom_be_pg: {}
  woorkroom_be_minio: {}
